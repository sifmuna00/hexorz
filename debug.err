   Compiling secrets v0.1.0 (/home/sifmunix/projects/game_jams/game_off/secrets)
warning: unused import: `color::Color`
 --> src/core/hex.rs:1:17
  |
1 | use macroquad::{color::Color, math::*};
  |                 ^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::collections::HashSet`
 --> src/core/map.rs:1:5
  |
1 | use std::collections::HashSet;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `hash::Hash`
 --> src/core/map.rs:2:33
  |
2 | use std::{collections::HashMap, hash::Hash, vec};
  |                                 ^^^^^^^^^^

warning: unused import: `self`
 --> src/main.rs:8:11
  |
8 |     hex::{self, *},
  |           ^^^^

warning: variable does not need to be mutable
   --> src/main.rs:237:9
    |
237 |     let mut hexmap = tmp.hexmap.clone();
    |         ----^^^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

error[E0277]: cannot divide `f32` by `{integer}`
   --> src/main.rs:105:60
    |
105 |                         draw_text("ERROR", screen_height() / 2, screen_width() / 2, 15.0, ORANGE);
    |                                                            ^ no implementation for `f32 / {integer}`
    |
    = help: the trait `Div<{integer}>` is not implemented for `f32`
    = help: the following other types implement trait `Div<Rhs>`:
              <&'a f32 as Div<f32>>
              <&f32 as Div<&f32>>
              <f32 as Div<&f32>>
              <f32 as Div<Mat3>>
              <f32 as Div<Mat3A>>
              <f32 as Div<Vec3>>
              <f32 as Div<Vec3A>>
              <f32 as Div<Vec4>>
            and 4 others
help: consider using a floating-point literal by writing it with `.0`
    |
105 |                         draw_text("ERROR", screen_height() / 2.0, screen_width() / 2, 15.0, ORANGE);
    |                                                               ++

error[E0277]: cannot divide `f32` by `{integer}`
   --> src/main.rs:105:80
    |
105 |                         draw_text("ERROR", screen_height() / 2, screen_width() / 2, 15.0, ORANGE);
    |                                                                                ^ no implementation for `f32 / {integer}`
    |
    = help: the trait `Div<{integer}>` is not implemented for `f32`
    = help: the following other types implement trait `Div<Rhs>`:
              <&'a f32 as Div<f32>>
              <&f32 as Div<&f32>>
              <f32 as Div<&f32>>
              <f32 as Div<Mat3>>
              <f32 as Div<Mat3A>>
              <f32 as Div<Vec3>>
              <f32 as Div<Vec3A>>
              <f32 as Div<Vec4>>
            and 4 others
help: consider using a floating-point literal by writing it with `.0`
    |
105 |                         draw_text("ERROR", screen_height() / 2, screen_width() / 2.0, 15.0, ORANGE);
    |                                                                                   ++

warning: unused variable: `size`
   --> src/core/hex.rs:184:13
    |
184 |         let size = self.size;
    |             ^^^^ help: if this is intentional, prefix it with an underscore: `_size`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `origin`
   --> src/core/hex.rs:185:13
    |
185 |         let origin = self.origin;
    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_origin`

warning: unused variable: `delta`
  --> src/core/player.rs:34:13
   |
34 |         let delta = direction.to_hex();
   |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_delta`

For more information about this error, try `rustc --explain E0277`.
warning: `secrets` (bin "secrets") generated 8 warnings
error: could not compile `secrets` (bin "secrets") due to 2 previous errors; 8 warnings emitted
